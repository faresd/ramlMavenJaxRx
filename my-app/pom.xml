<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mycompany.app</groupId>
  <artifactId>my-app</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>my-app</name>
  <properties>
    <app.id>your-app-id</app.id>
    <app.version>1</app.version>
    <appengine.version>1.9.31</appengine.version>
    <gcloud.plugin.version>2.0.9.74.v20150814</gcloud.plugin.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
    <jackson.version>2.7.0</jackson.version>
    <jersey.version>2.22.1</jersey.version>
  </properties>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>2.0.2-beta</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-testing</artifactId>
      <version>${appengine.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-simple-http</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-stubs</artifactId>
      <version>${appengine.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.raml.plugins</groupId>
        <artifactId>raml-jaxrs-maven-plugin</artifactId>
        <version>1.3.4</version>
        <configuration>
          <!-- Use sourcePaths if you want to provide a single RAML file or a list of RAML files -->
          <sourceDirectory>${basedir}/raml</sourceDirectory>
          <!-- Optionally configure outputDirectory if you don't like the default value: ${project.build.directory}/generated-sources/raml-JAX-RS -->
          <!-- Replace with your package name -->
          <basePackageName>com.mycompany.app</basePackageName>
          <!-- Valid values: 1.1 2.0 -->
          <jaxrsVersion>2.0</jaxrsVersion>
          <useJsr303Annotations>true</useJsr303Annotations>
          <!-- Valid values: jackson1 jackson2 gson none -->
          <jsonMapper>jackson2</jsonMapper>
          <removeOldOutput>true</removeOldOutput>
          <!-- Optionally set extensions to a list of fully qualified names of classes
          that implement org.raml.jaxrs.codegen.core.ext.GeneratorExtension -->
          <!-- for example:
          <extensions>
              <param>com.abc.AuthorizationAnnotationExtension</param>
              <param>com.abc.ParameterFilterExtension</param>
          </extensions>
          Custom annotator for json schema to pojo convertor
          <customAnnotator>com.abc.MyCustomAnnotator</customAnnotator>
          -->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <phase>generate-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.appengine</groupId>
        <artifactId>appengine-maven-plugin</artifactId>
        <version>1.9.28</version>
      </plugin>
    </plugins>
  </build>
</project>
